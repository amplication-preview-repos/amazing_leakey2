datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Transaction {
  account          Account?               @relation(fields: [accountId], references: [id])
  accountId        String?
  amount           Float?
  createdAt        DateTime               @default(now())
  cryptoCurrency   CryptoCurrency?        @relation(fields: [cryptoCurrencyId], references: [id])
  cryptoCurrencyId String?
  id               String                 @id @default(cuid())
  status           EnumTransactionStatus?
  timestamp        DateTime?
  updatedAt        DateTime               @updatedAt
}

model Account {
  balance          Float?
  createdAt        DateTime        @default(now())
  cryptoCurrency   CryptoCurrency? @relation(fields: [cryptoCurrencyId], references: [id])
  cryptoCurrencyId String?
  id               String          @id @default(cuid())
  transactions     Transaction[]
  updatedAt        DateTime        @updatedAt
  user             User?           @relation(fields: [userId], references: [id])
  userId           String?
}

model CryptoCurrency {
  accounts     Account[]
  createdAt    DateTime      @default(now())
  id           String        @id @default(cuid())
  marketCap    Float?
  name         String?
  symbolField  String?
  transactions Transaction[]
  updatedAt    DateTime      @updatedAt
}

model BotCommand {
  commandText String?
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  parameters  Json?
  updatedAt   DateTime @updatedAt
}

model User {
  accounts  Account[]
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

enum EnumTransactionStatus {
  Option1
}
